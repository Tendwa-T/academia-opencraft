import 'package:academia/database/database.dart';
import 'package:academia/features/magnet/domain/domain.dart';
import 'package:magnet/magnet.dart';

extension MagnetStudentProfileExtension on MagnetStudentProfile {
  MagnetStudentProfileData toData() => MagnetStudentProfileData(
    userID: userID,
    institutionID: institutionID,
    admissionNumber: admissionNumber,
    firstName: firstName,
    otherNames: otherNames,
    school: school,
    gpa: gpa,
    email: email,
    gender: gender,
    campus: campus,
    degree: degree,
    address: address,
    programme: programme,
    nationalId: nationalID,
    parentName: parentName,
    phoneNumber: phoneNumber,
    dateOfBirth: dateOfBirth,
    academicYear: academicYear,
    graduationDate: graduationDate,
    dateOfAdmission: dateOfAdmission,
    enrollmentStatus: enrollmentStatus,
    emergencyContact: emergencyContact,
    disabilityStatus: disabilityStatus,
    profilePictureUrl: profilePictureUrl,
    isInternationalStudent: isInternationalStudent,
  );
  StudentProfile toMagnet() => StudentProfile(
    admissionNumber: admissionNumber,
    firstName: firstName,
    otherNames: otherNames,
    school: school,
    gpa: gpa,
    email: email,
    gender: gender,
    campus: campus,
    degree: degree,
    address: address,
    programme: programme,
    nationalID: nationalID,
    parentName: parentName,
    phoneNumber: phoneNumber,
    dateOfBirth: dateOfBirth,
    academicYear: academicYear,
    graduationDate: graduationDate,
    dateOfAdmission: dateOfAdmission,
    enrollmentStatus: enrollmentStatus,
    emergencyContact: emergencyContact,
    disabilityStatus: disabilityStatus,
    profilePictureUrl: profilePictureUrl,
    isInternationalStudent: isInternationalStudent,
  );
}

extension MagnetStudentProfileDataExtension on MagnetStudentProfileData {
  MagnetStudentProfile toEntity() => MagnetStudentProfile(
    userID: userID,
    institutionID: institutionID,
    admissionNumber: admissionNumber,
    firstName: firstName,
    otherNames: otherNames,
    school: school,
    gpa: gpa,
    email: email,
    gender: gender,
    campus: campus,
    degree: degree,
    address: address,
    programme: programme,
    nationalID: nationalId,
    parentName: parentName,
    phoneNumber: phoneNumber,
    dateOfBirth: dateOfBirth,
    academicYear: academicYear,
    graduationDate: graduationDate,
    dateOfAdmission: dateOfAdmission,
    enrollmentStatus: enrollmentStatus,
    emergencyContact: emergencyContact,
    disabilityStatus: disabilityStatus,
    profilePictureUrl: profilePictureUrl,
    isInternationalStudent: isInternationalStudent,
  );
  StudentProfile toMagnet() => StudentProfile(
    admissionNumber: admissionNumber,
    firstName: firstName,
    otherNames: otherNames,
    school: school,
    gpa: gpa,
    email: email,
    gender: gender,
    campus: campus,
    degree: degree,
    address: address,
    programme: programme,
    nationalID: nationalId,
    parentName: parentName,
    phoneNumber: phoneNumber,
    dateOfBirth: dateOfBirth,
    academicYear: academicYear,
    graduationDate: graduationDate,
    dateOfAdmission: dateOfAdmission,
    enrollmentStatus: enrollmentStatus,
    emergencyContact: emergencyContact,
    disabilityStatus: disabilityStatus,
    profilePictureUrl: profilePictureUrl,
    isInternationalStudent: isInternationalStudent,
  );
}

extension StudentProfileExtension on StudentProfile {
  MagnetStudentProfile toEntity({
    required String userID,
    required int institutionID,
  }) => MagnetStudentProfile(
    userID: userID,
    institutionID: institutionID,
    admissionNumber: admissionNumber,
    firstName: firstName,
    otherNames: otherNames,
    school: school,
    gpa: gpa,
    email: email,
    gender: gender,
    campus: campus,
    degree: degree,
    address: address,
    programme: programme,
    nationalID: nationalID,
    parentName: parentName,
    phoneNumber: phoneNumber,
    dateOfBirth: dateOfBirth,
    academicYear: academicYear,
    graduationDate: graduationDate,
    dateOfAdmission: dateOfAdmission,
    enrollmentStatus: enrollmentStatus,
    emergencyContact: emergencyContact,
    disabilityStatus: disabilityStatus,
    profilePictureUrl: profilePictureUrl,
    isInternationalStudent: isInternationalStudent,
  );

  MagnetStudentProfileData toData({
    required String userID,
    required int institutionID,
  }) => MagnetStudentProfileData(
    userID: userID,
    institutionID: institutionID,
    admissionNumber: admissionNumber,
    firstName: firstName,
    otherNames: otherNames,
    school: school,
    gpa: gpa,
    email: email,
    gender: gender,
    campus: campus,
    degree: degree,
    address: address,
    programme: programme,
    nationalId: nationalID,
    parentName: parentName,
    phoneNumber: phoneNumber,
    dateOfBirth: dateOfBirth,
    academicYear: academicYear,
    graduationDate: graduationDate,
    dateOfAdmission: dateOfAdmission,
    enrollmentStatus: enrollmentStatus,
    emergencyContact: emergencyContact,
    disabilityStatus: disabilityStatus,
    profilePictureUrl: profilePictureUrl,
    isInternationalStudent: isInternationalStudent,
  );
}
